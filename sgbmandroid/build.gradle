plugins {
    id 'com.android.library'
    id 'org.bytedeco.gradle-javacpp-build' version '1.5.7'
}

android {
    compileSdk 31

    defaultConfig {
        minSdk 23
        targetSdk 31

        consumerProguardFiles "consumer-rules.pro"

        externalNativeBuild {
            cmake {
                cppFlags '-std=c++11 -frtti -fexceptions'
                arguments '-DANDROID_ARM_NEON=TRUE'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.18.1'
        }
    }
}

android.libraryVariants.all { variant ->
    def variantName = variant.name.capitalize() // either "Debug" or "Release"
    def javaCompile = project.tasks.getByName("compile${variantName}JavaWithJavac")
    def configureCMake = project.tasks.findAll {
        it.name.startsWith("configureCMake${variantName}")
    }

    // Compiles SgbmAndroidConfig.java
    task "javacppCompileJava$variantName"(type: JavaCompile) {
        include 'me/timpushkin/sgbmandroid/SgbmAndroidConfig.java'
        source = javaCompile.source
        classpath = javaCompile.classpath
        destinationDir = javaCompile.destinationDir
    }

    // Parses DepthEstimator.h and outputs SgbmAndroid.java
    task "javacppBuildParser$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
        dependsOn "javacppCompileJava$variantName"
        classPath = [javaCompile.destinationDir]
        includePath = ["$projectDir/src/main/cpp/include"]
        classOrPackageNames = ['me.timpushkin.sgbmandroid.SgbmAndroidConfig']
        outputDirectory = file("$projectDir/src/main/java/")
    }

    // Compiles SgbmAndroid.java and everything else
    javaCompile.dependsOn "javacppBuildParser$variantName"

    // Generates jnijavacpp.cpp and jniSgbmAndroid.cpp
    task "javacppBuildCompiler$variantName"(type: org.bytedeco.gradle.javacpp.BuildTask) {
        dependsOn javaCompile
        classPath = [javaCompile.destinationDir]
        classOrPackageNames = ['me.timpushkin.sgbmandroid.SgbmAndroid']
        compile = false
        deleteJniFiles = false
        outputDirectory = file("$projectDir/src/main/cpp/src")
    }

    // Picks up the C++ files listed in CMakeLists.txt
    configureCMake.forEach {
        it.dependsOn "javacppBuildCompiler$variantName"
    }
}

dependencies {
    implementation 'org.bytedeco:javacpp:1.5.7'
}
